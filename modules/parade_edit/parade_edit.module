<?php

/**
 * @file
 * Code for Parade Edit.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Url;

/**
 * Implements hook_preprocess_HOOK().
 *
 * Using hook_preprocess_field().
 * Disable Geysir functionality on node/ID page.
 */
function parade_edit_preprocess_field(&$vars) {
  if (empty($vars['field_type']) || $vars['field_type'] !== 'entity_reference_revisions') {
    return;
  }

  if (isset($vars['attributes']['data-geysir-field-paragraph-field-wrapper'])) {
    $disable_geysir = FALSE;
    $route_match = \Drupal::routeMatch();
    if (in_array($route_match->getRouteName(), ['entity.node.canonical', 'entity.node.parade_edit'])) {
      // Disable on node view.
      if ($route_match->getRouteName() === 'entity.node.canonical') {
        unset($vars['attributes']['data-geysir-field-paragraph-field-wrapper']);
        $disable_geysir = TRUE;
      }
      $element = &$vars['element'];
      $delta = 0;
      while (!empty($element[$delta])) {
        $entity = $element[$delta]['#paragraph'];
        // Disable on node view, or on parade_edit for specific paragraph types.
        // @todo manage dynamically, e.g. via reference field.
        if ($disable_geysir || ($route_match->getRouteName() === 'entity.node.parade_edit' && in_array($entity->bundle(), ['text_box']))) {
          if (($key = array_search('geysir_field_paragraph_wrapper', $vars['items'][$delta]['content']['#theme_wrappers'])) !== FALSE) {
            unset($vars['items'][$delta]['content']['#theme_wrappers'][$key]);
          }
          unset($vars['items'][$delta]['content']['#geysir_field_paragraph_links']);
        }
        $delta++;
      }
    }
  }

  $element = &$vars['element'];
  /** @var \Drupal\Core\Entity\FieldableEntityInterface $parent */
  $parent = $element['#object'];

  // Check update access for current node + permission to use Geysir.
  if (!$parent->access('update') || !\Drupal::currentUser()->hasPermission('geysir manage paragraphs from front-end')) {
    return;
  }

  /** @var \Drupal\entity_reference_revisions\EntityReferenceRevisionsFieldItemList $field */
  $field = $element['#items'];
  $field_definition = $field->getFieldDefinition();
  $field_storage_definition = $field_definition->getFieldStorageDefinition();
  if ($field_storage_definition->getSetting('target_type') !== 'paragraph') {
    return;
  }

  $field_wrapper_id = Html::getUniqueId('geysir--' . $vars['field_name']);

  $delta = 0;
  while (!empty($element[$delta])) {
    $links = [];
    $entity = $element[$delta]['#paragraph'];

    // Up link.
    $links['up'] = [
      'title'      => t('Up'),
      'url'        => Url::fromRoute('parade_edit.up', [
        'parent_entity_type'     => $parent->getEntityType()->id(),
        'parent_entity_bundle'   => $parent->bundle(),
        'parent_entity_revision' => $parent->getRevisionId(),
        'field'                  => $vars['field_name'],
        'field_wrapper_id'       => $field_wrapper_id,
        'delta'                  => $delta,
        'paragraph'              => $entity->id(),
        'paragraph_revision'     => $entity->getRevisionId(),
        'js'                     => 'nojs',
      ]),
      'attributes' => [
        'class' => ['use-ajax', 'geysir-button'],
        //'data-dialog-type' => 'modal',
      ],
    ];

    // Down link.
    $links['down'] = [
      'title'      => t('Down'),
      'url'        => Url::fromRoute('parade_edit.down', [
        'parent_entity_type'     => $parent->getEntityType()->id(),
        'parent_entity_bundle'   => $parent->bundle(),
        'parent_entity_revision' => $parent->getRevisionId(),
        'field'                  => $vars['field_name'],
        'field_wrapper_id'       => $field_wrapper_id,
        'delta'                  => $delta,
        'paragraph'              => $entity->id(),
        'paragraph_revision'     => $entity->getRevisionId(),
        'js'                     => 'nojs',
      ]),
      'attributes' => [
        'class' => ['use-ajax', 'geysir-button'],
        //'data-dialog-type' => 'modal',
      ],
    ];

    // Add link - before.
    $links['add_before'] = [
      'title'      => t('Add before'),
      'url'        => Url::fromRoute('geysir.modal.add_form', [
        'parent_entity_type'     => $parent->getEntityType()->id(),
        'parent_entity_bundle'   => $parent->bundle(),
        'parent_entity_revision' => $parent->getRevisionId(),
        'field'                  => $vars['field_name'],
        'field_wrapper_id'       => $field_wrapper_id,
        'delta'                  => $delta,
        'paragraph'              => $entity->id(),
        'paragraph_revision'     => $entity->getRevisionId(),
        'position'               => 'before',
        'js'                     => 'nojs',
      ]),
      'attributes' => [
        'class'            => ['use-ajax', 'geysir-button'],
        'data-dialog-type' => 'modal',
      ],
    ];

    // Add link - after.
    $links['add_after'] = [
      'title' => t('Add after'),
      'url' => Url::fromRoute('geysir.modal.add_form', [
        'parent_entity_type'     => $parent->getEntityType()->id(),
        'parent_entity_bundle'   => $parent->bundle(),
        'parent_entity_revision' => $parent->getRevisionId(),
        'field'                  => $vars['field_name'],
        'field_wrapper_id'       => $field_wrapper_id,
        'delta'                  => $delta,
        'paragraph'              => $entity->id(),
        'paragraph_revision'     => $entity->getRevisionId(),
        'position'               => 'after',
        'js'                     => 'nojs',
      ]),
      'attributes' => [
        'class' => ['use-ajax', 'geysir-button'],
        'data-dialog-type' => 'modal',
      ],
    ];

    // Edit link.
    $links['edit'] = [
      'title' => t('Edit'),
      'url' => Url::fromRoute('geysir.modal.edit_form', [
        'parent_entity_type'     => $parent->getEntityType()->id(),
        'parent_entity_bundle'   => $parent->bundle(),
        'parent_entity_revision' => $parent->getRevisionId(),
        'field'                  => $vars['field_name'],
        'field_wrapper_id'       => $field_wrapper_id,
        'delta'                  => $delta,
        'paragraph'              => $entity->id(),
        'paragraph_revision'     => $entity->getRevisionId(),
        'js'                     => 'nojs',
      ]),
      'attributes' => [
        'class' => ['use-ajax', 'geysir-button'],
        'data-dialog-type' => 'modal',
      ],
    ];

    // Delete link.
    $links['delete'] = [
      'title' => t('Delete'),
      'url' => Url::fromRoute('geysir.modal.delete_form', [
        'parent_entity_type'     => $parent->getEntityType()->id(),
        'parent_entity_bundle'   => $parent->bundle(),
        'parent_entity_revision' => $parent->getRevisionId(),
        'field'                  => $vars['field_name'],
        'field_wrapper_id'       => $field_wrapper_id,
        'delta'                  => $delta,
        'paragraph'              => $entity->id(),
        'paragraph_revision'     => $entity->getRevisionId(),
        'js'                     => 'nojs',
      ]),
      'attributes' => [
        'class' => ['use-ajax', 'geysir-button'],
        'data-dialog-type' => 'modal',
      ],
    ];

    $links_array = [
      '#theme'    => 'links',
      '#links'    => $links,
      '#attributes' => ['class' => ['geysir-field-paragraph-links', 'links']],
      '#attached' => ['library' => ['core/drupal.dialog.ajax', 'geysir/paragraphs', 'parade_edit/paragraphs']],
    ];

    $vars['items'][$delta]['content']['#geysir_field_paragraph_links'] = \Drupal::service('renderer')->render($links_array);

    $delta++;
  }

  // Attach the field wrapper ID in a data-attribute.
  $vars['attributes']['data-geysir-field-paragraph-field-wrapper'] = $field_wrapper_id;
}
