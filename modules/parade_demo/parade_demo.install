<?php

/**
 * @file
 * Install hooks for Parade Demo.
 */

use Drupal\Core\Config\FileStorage;

/**
 * Implements hook_install().
 */
function parade_demo_install() {
  _parade_demo_create_demo_layout();
  _parade_demo_create_demo_color_schemes();
  _parade_demo_create_demo_content();
  _parade_demo_add_system_branding_block();
  _parade_demo_set_visibility_page_title_block();
}

/**
 * Implements hook_uninstall().
 */
function parade_demo_uninstall() {
  $entityTypeManager = \Drupal::entityTypeManager();
  $nodeStorage = $entityTypeManager
    ->getStorage('node');

  // Remove content created by this module.
  $nodes = $nodeStorage
    ->loadByProperties(['type' => 'parade_onepage']);
  $nodeStorage->delete($nodes);

  $classyStorage = $entityTypeManager->getStorage('classy_paragraphs_style');
  /** @var \Drupal\Core\Entity\EntityInterface[] $classyStyles */
  $classyStyles = $classyStorage
    ->loadMultiple([
      'layout_one_column',
      'layout_two_column_content_1st',
      'layout_two_column_title_1st',
      'layout_text_1st',
      'layout_image_1st',
      'layout_none',
      'layout_rounded_image',
      'layout_separator_clean',
      'layout_text_1st_enhanced',
      'layout_text_with_an_icon',
      'color_clean',
      'color_light_blue',
      'color_light_grey',
      'color_blue',
      'color_shaded',
    ]);
  $classyStorage->delete($classyStyles);

  // Remove the site branding block.
  $blockStorage = \Drupal::entityTypeManager()->getStorage('block');
  if ($siteBrandingBlock = $blockStorage->load('system_branding_block')) {
    $siteBrandingBlock->delete();
  }
}

/**
 * Helper function to create demo layouts.
 */
function _parade_demo_create_demo_layout() {
  $entityTypeManager = \Drupal::entityTypeManager();
  $classyStorage = $entityTypeManager->getStorage('classy_paragraphs_style');

  $layouts = [
    [
      'label' => 'Layout one column',
      'id' => 'layout_one_column',
      'classes' => 'layout--one-column',
    ],
    [
      'label' => 'Layout two column content first',
      'id' => 'layout_two_column_content_1st',
      'classes' => 'layout--two-column-content-1st-inverse',
    ],
    [
      'label' => 'Layout two column title first',
      'id' => 'layout_two_column_title_1st',
      'classes' => 'layout--two-column-title-1st-inverse',
    ],
    [
      'label' => 'Layout text first',
      'id' => 'layout_text_1st',
      'classes' => 'layout--text_1st',
    ],
    [
      'label' => 'Layout image first',
      'id' => 'layout_image_1st',
      'classes' => 'layout--image_1st',
    ],
    [
      'label' => 'Layout none',
      'id' => 'layout_none',
      'classes' => 'layout--none',
    ],
    [
      'label' => 'Layout rounded image',
      'id' => 'layout_rounded_image',
      'classes' => 'layout--rounded_image',
    ],
    [
      'label' => 'Layout separator title only',
      'id' => 'layout_separator_clean',
      'classes' => 'layout--separator-clean',
    ],
    [
      'label' => 'Layout text first - enhanced',
      'id' => 'layout_text_1st_enhanced',
      'classes' => 'layout--text_1st_enhanced',
    ],
    [
      'label' => 'Layout text with an icon',
      'id' => 'layout_text_with_an_icon',
      'classes' => 'layout--text_icon',
    ],
  ];

  foreach ($layouts as $layout) {
    $existing = $classyStorage->load($layout['id']);
    if (NULL === $existing) {
      $classyStyle = $classyStorage->create($layout);
      $classyStyle->save();
    }
  }
}

/**
 * Helper function to create demo color schemes.
 */
function _parade_demo_create_demo_color_schemes() {
  $entityTypeManager = \Drupal::entityTypeManager();
  $classyStorage = $entityTypeManager->getStorage('classy_paragraphs_style');

  $colors = [
    [
      'label' => 'Color clean',
      'id' => 'color_clean',
      'classes' => 'color-clean',
    ],
    [
      'label' => 'Color light blue',
      'id' => 'color_light_blue',
      'classes' => 'color-light-blue',
    ],
    [
      'label' => 'Color light grey',
      'id' => 'color_light_grey',
      'classes' => 'color-light-grey',
    ],
    [
      'label' => 'Color blue',
      'id' => 'color_blue',
      'classes' => 'color-blue',
    ],
    [
      'label' => 'Color shaded',
      'id' => 'color_shaded',
      'classes' => 'color-shaded',
    ],
  ];

  foreach ($colors as $color) {
    $existing = $classyStorage->load($color['id']);
    if (NULL === $existing) {
      $classyStyle = $classyStorage->create($color);
      $classyStyle->save();
    }
  }
}

/**
 * Helper function to create demo content.
 */
function _parade_demo_create_demo_content() {
  $entityTypeManager = \Drupal::entityTypeManager();
  $paragraphStorage = $entityTypeManager->getStorage('paragraph');

  $paradeDemoPath = drupal_get_path('module', 'parade_demo');

  $dirs = [
    'public://paragraphs',
    'public://paragraphs/background',
    'public://image',
    'public://image/box',
    'public://image/' . date('Y-m'),
    'public://image/box/' . date('Y-m'),

  ];
  foreach ($dirs as $dir) {
    file_prepare_directory($dir, FILE_CREATE_DIRECTORY);
  }

  $headerBackgroundUri = file_unmanaged_copy($paradeDemoPath . '/images/parade-default-header-video-cut-720p-web.mp4',
    'public://paragraphs/background/parade-default-header-video-cut-720p-web.mp4',
    FILE_EXISTS_REPLACE);
  $headerBackgroundFile = $entityTypeManager->getStorage('file')->create([
    'uri' => $headerBackgroundUri,
  ]);
  $headerBackgroundFile->save();

  $parallaxBackgroundUri = file_unmanaged_copy($paradeDemoPath . '/images/building.jpg',
    'public://paragraphs/background/building.jpg', FILE_EXISTS_REPLACE);
  $parallaxBackgroundFile = $entityTypeManager->getStorage('file')->create([
    'uri' => $parallaxBackgroundUri,
  ]);
  $parallaxBackgroundFile->save();

  $imageUri = file_unmanaged_copy($paradeDemoPath . '/images/guitar.jpg',
    'public://image/' . date('Y-m') . '/guitar.jpg', FILE_EXISTS_REPLACE);
  $imageFile_1 = $entityTypeManager->getStorage('file')->create([
    'uri' => $imageUri,
  ]);
  $imageFile_1->save();

  $imageUri = file_unmanaged_copy($paradeDemoPath . '/images/hut.jpg',
    'public://image/' . date('Y-m') . '/hut.jpg', FILE_EXISTS_REPLACE);
  $imageFile_2 = $entityTypeManager->getStorage('file')->create([
    'uri' => $imageUri,
  ]);
  $imageFile_2->save();

  $imageUri = file_unmanaged_copy($paradeDemoPath . '/images/woman-sample.jpg',
    'public://image/' . date('Y-m') . '/woman-sample.jpg', FILE_EXISTS_REPLACE);
  $imageFile_3 = $entityTypeManager->getStorage('file')->create([
    'uri' => $imageUri,
  ]);
  $imageFile_3->save();

  $textImageUri = file_unmanaged_copy($paradeDemoPath . '/images/melbourne.jpg',
    'public://image/' . date('Y-m') . '/melbourne.jpg', FILE_EXISTS_REPLACE);
  $textImageFile = $entityTypeManager->getStorage('file')->create([
    'uri' => $textImageUri,
  ]);
  $textImageFile->save();

  $textBoxImageUri = file_unmanaged_copy($paradeDemoPath . '/images/guitar.jpg',
    'public://image/box/' . date('Y-m') . '/guitar.jpg', FILE_EXISTS_REPLACE);
  $textBoxImageFile = $entityTypeManager->getStorage('file')->create([
    'uri' => $textBoxImageUri,
  ]);
  $textBoxImageFile->save();

  $defaultIconUri = file_unmanaged_copy($paradeDemoPath . '/images/default-icon.png',
    'public://image/box/' . date('Y-m') . '/default-icon.png',
    FILE_EXISTS_REPLACE);
  $defaultIconFile = $entityTypeManager->getStorage('file')->create([
    'uri' => $defaultIconUri,
  ]);
  $defaultIconFile->save();

  $roundedImageUri = file_unmanaged_copy($paradeDemoPath . '/images/people-sample.jpg',
    'public://image/box/' . date('Y-m') . '/people-sample.jpg',
    FILE_EXISTS_REPLACE);
  $roundedImageFile = $entityTypeManager->getStorage('file')->create([
    'uri' => $roundedImageUri,
  ]);
  $roundedImageFile->save();

  $textImageDrupalUri = file_unmanaged_copy($paradeDemoPath . '/images/drupal-8.png',
    'public://image/' . date('Y-m') . '/drupal-8.png', FILE_EXISTS_REPLACE);
  $textImageDrupalFile = $entityTypeManager->getStorage('file')->create([
    'uri' => $textImageDrupalUri,
  ]);
  $textImageDrupalFile->save();

  $textBox = [
    'type' => 'text_box',
    'parade_title' => 'Textbox title',
    'parade_image' => [
      'target_id' => $textBoxImageFile->id(),
      'alt' => 'Guitar',
      'title' => 'Guitar',
    ],
    'parade_text' => [
      'value' => "<p>Suspendisse potenti. Curabitur faucibus egestas eros. Donec euismod congue odio. Aliquam sagittis quam quis quam. Maecenas viverra. Donec sapien orci, facilisis quis, sagittis ac, laoreet nec, eros. Quisque sed diam non erat facilisis iaculis.</p>",
      'format' => 'basic_html',
    ],
  ];
  $textBoxParagraphs = [];
  for ($i = 0; $i < 3; $i++) {
    $textBoxParagraphs[] = $paragraphStorage->create($textBox);
  }

  $iconTextBox = [
    'type' => 'text_box',
    'parade_title' => 'Text with an icon',
    'parade_image' => [
      'target_id' => $defaultIconFile->id(),
      'alt' => 'Default icon',
      'title' => 'Default icon',
    ],
    'parade_text' => [
      'value' => "<p>Suspendisse potenti. Curabitur faucibus egestas eros. Donec euismod congue odio. Aliquam sagittis quam quis quam. Maecenas viverra. Donec sapien orci, facilisis quis, sagittis ac, laoreet nec, eros. Quisque sed diam non erat facilisis iaculis.</p>",
      'format' => 'basic_html',
    ],
  ];
  $iconParagraphs = [];
  for ($i = 0; $i < 3; $i++) {
    $iconParagraphs[] = $paragraphStorage->create($iconTextBox);
  }

  $roundedTextBox = [
    'type' => 'text_box',
    'parade_title' => 'Rounded image title',
    'parade_image' => [
      'target_id' => $roundedImageFile->id(),
      'alt' => 'People',
      'title' => 'People',
    ],
    'parade_text' => [
      'value' => "<p>Suspendisse potenti. Curabitur faucibus egestas eros. Donec euismod congue odio. Aliquam sagittis quam quis quam. Maecenas viverra. Donec sapien orci, facilisis quis, sagittis ac, laoreet nec, eros. Quisque sed diam non erat facilisis iaculis.</p>",
      'format' => 'basic_html',
    ],
  ];
  $roundedParagraphs = [];
  for ($i = 0; $i < 4; $i++) {
    $roundedParagraphs[] = $paragraphStorage->create($roundedTextBox);
  }

  $paragraphsData = [
    [
      'type' => 'header',
      'parade_anchor' => '#home',
      'parade_background' => [
        'target_id' => $headerBackgroundFile->id(),
        'alt' => 'Header background video',
        'title' => 'Header background video',
      ],
      'parade_title' => 'Parade',
      'parade_secondary_title' => 'One Page Site Demo no. 1',
      'parade_lead_text' => 'A package built on top of the awesome Paragraphs module, featuring common sections and onepage-site solutions.',
      'parade_call_to_action' => [
        'uri' => 'internal:#builtonparade',
        'title' => 'Drupal project',
      ],
      'parade_enable_parallax' => TRUE,
    ],
    [
      'type' => 'simple',
      'parade_anchor' => '#simpleonecolumn',
      'parade_title' => 'Simple - One column - Clean',
      'parade_text' => [
        'value' => "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>

<p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>",
        'format' => 'full_html',
      ],
      'parade_layout' => 'layout_one_column',
      'parade_color_scheme' => 'color_clean',
    ],
    [
      'type' => 'simple',
      'parade_anchor' => '#simple2',
      'parade_title' => 'Simple  - One column - Light Grey',
      'parade_text' => [
        'value' => "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>",
        'format' => 'full_html',
      ],
      'parade_layout' => 'layout_one_column',
      'parade_color_scheme' => 'color_light_grey',
    ],
    [
      'type' => 'simple',
      'parade_anchor' => '#simple3',
      'parade_title' => 'Simple - One Column - Shaded',
      'parade_text' => [
        'value' => "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>

<p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</p>

<p>Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>",
        'format' => 'full_html',
      ],
      'parade_layout' => 'layout_one_column',
      'parade_color_scheme' => 'color_shaded',
    ],
    [
      'type' => 'simple',
      'parade_anchor' => '#simpletwocolumn',
      'parade_title' => 'Simple - Two column - Title first - Inverse',
      'parade_text' => [
        'value' => "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>",
        'format' => 'full_html',
      ],
      'parade_layout' => 'layout_two_column_title_1st',
      'parade_color_scheme' => 'color_clean',
    ],
    [
      'type' => 'simple',
      'parade_anchor' => '#simple5',
      'parade_title' => 'Simple - Two column - Content first - inverse',
      'parade_text' => [
        'value' => "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia</p>",
        'format' => 'full_html',
      ],
      'parade_view_mode' => 'inverse',
      'parade_layout' => 'layout_two_column_content_1st',
      'parade_color_scheme' => 'color_clean',
    ],
    [
      'type' => 'simple',
      'parade_anchor' => '#simple6',
      'parade_title' => 'Simple - Separator - Title only',
      'parade_text' => [
        'value' => "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>",
        'format' => 'full_html',
      ],
      'parade_layout' => 'layout_separator_clean',
      'parade_color_scheme' => 'color_clean',
    ],
    [
      'type' => 'parallax',
      'parade_title' => 'Parallax',
      'parade_anchor' => '#parallax',
      'parade_enable_parallax' => TRUE,
      'parade_minimum_height' => 300,
      'parade_background' => [
        'target_id' => $parallaxBackgroundFile->id(),
        'alt' => 'Building',
        'title' => 'Building',
      ],
      'parade_text' => [
        'value' => "<h2>Parallax Background&nbsp;Image Type</h2>

<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis n</p>",
        'format' => 'basic_html',
      ],
    ],
    [
      'type' => 'images',
      'parade_title' => 'Images',
      'parade_anchor' => '#images',
      'parade_images' => [
        [
          'target_id' => $imageFile_1->id(),
          'alt' => 'Guitar',
          'title' => 'Guitar',
        ],
        [
          'target_id' => $imageFile_2->id(),
          'alt' => 'Hut',
          'title' => 'Hut',
        ],
        [
          'target_id' => $imageFile_3->id(),
          'alt' => 'Woman',
          'title' => 'Woman',
        ],
      ],
    ],
    [
      'type' => 'image_text',
      'parade_title' => 'Textbox image first',
      'parade_anchor' => '#imagefirst',
      'parade_image' => [
        'target_id' => $textImageFile->id(),
        'alt' => 'Melbourne',
        'title' => 'Melbourne',
      ],
      'parade_text' => [
        'value' => "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>",
        'format' => 'basic_html',
      ],
      'parade_call_to_action' => [
        'uri' => 'internal:#home',
        'title' => 'Home',
      ],
      'parade_layout' => 'layout_image_1st',
      'parade_color_scheme' => 'color_clean',
    ],
    [
      'type' => 'image_text',
      'parade_title' => 'Textbox text first',
      'parade_anchor' => '#textfirst',
      'parade_image' => [
        'target_id' => $textImageFile->id(),
        'alt' => 'Melbourne',
        'title' => 'Melbourne',
      ],
      'parade_text' => [
        'value' => "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>",
        'format' => 'basic_html',
      ],
      'parade_call_to_action' => [
        'uri' => 'internal:#home',
        'title' => 'Home',
      ],
      'parade_view_mode' => 'inverse',
      'parade_layout' => 'layout_text_1st',
      'parade_color_scheme' => 'color_clean',
    ],
    [
      'type' => 'image_text',
      'parade_title' => 'Textbox - text first - enhanced',
      'parade_anchor' => '#imagefirst-enhanced',
      'parade_image' => [
        'target_id' => $textImageFile->id(),
        'alt' => 'Melbourne',
        'title' => 'Melbourne',
      ],
      'parade_text' => [
        'value' => "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>",
        'format' => 'basic_html',
      ],
      'parade_call_to_action' => [
        'uri' => 'internal:#home',
        'title' => 'Home',
      ],
      'parade_view_mode' => 'default',
      'parade_layout' => 'layout_text_1st_enhanced',
      'parade_color_scheme' => 'color_clean',
    ],
    [
      'type' => 'text_boxes',
      'parade_title' => 'Text boxes with an image',
      'parade_anchor' => '#textbox-icons',
      'parade_boxes_per_row' => 3,
      'parade_paragraphs' => $textBoxParagraphs,
      'parade_view_mode' => 'default',
      'parade_layout' => 'layout_none',
      'parade_color_scheme' => 'color_clean',
    ],
    [
      'type' => 'text_boxes',
      'parade_title' => 'Text boxes with an icon',
      'parade_anchor' => '#textbox-icons',
      'parade_boxes_per_row' => 3,
      'parade_paragraphs' => $iconParagraphs,
      'parade_view_mode' => 'default',
      'parade_layout' => 'layout_text_with_an_icon',
      'parade_color_scheme' => 'color_clean',
    ],
    [
      'type' => 'text_boxes',
      'parade_title' => 'Text boxes with rounded image',
      'parade_anchor' => '#textbox-icons',
      'parade_boxes_per_row' => 2,
      'parade_paragraphs' => $roundedParagraphs,
      'parade_view_mode' => 'custom',
      'parade_layout' => 'layout_rounded_image',
      'parade_color_scheme' => 'color_clean',
    ],
    [
      'type' => 'image_text',
      'parade_title' => 'This one page site',
      'parade_anchor' => '#builtonparade',
      'parade_image' => [
        'target_id' => $textImageDrupalFile->id(),
        'alt' => 'D8',
        'title' => 'D8',
      ],
      'parade_text' => [
        'value' => "<p><br />
<strong>is built on <a href=\"https://www.drupal.org/project/parade\">parade module</a>&nbsp;without custom code or CSS.</strong></p>

<p><strong>Brought to you by <a href=\"http://www.brainsum.com\">BRAINSUM</a>.&nbsp;</strong></p>

<p><strong>Powered by <a href=\"https://www.drupal.org/8/\">Drupal 8</a>.</strong></p>",
        'format' => 'basic_html',
      ],
      'parade_view_mode' => 'inverse',
      'parade_layout' => 'layout_text_1st',
      'parade_color_scheme' => 'color_clean',
    ],
  ];

  $locationRequirementsCheck = class_exists('Ivory\HttpAdapter\CurlHttpAdapter');

  if ($locationRequirementsCheck) {
    $paragraphsData[] = [
      'type' => 'locations',
      'parade_anchor' => '#locations',
      'parade_title' => 'Map with multiple markers',
      'parade_text' => [
        'value' => "<p>&nbsp;</p>

<p>You can find BRAINSUM offices here.</p>",
        'format' => 'basic_html',
      ],
      'parade_location' => [
        'Hungary, 1093 Budapest, Vámház körút 7.',
        'Slovensko, 82108 Bratislava, Páričkova 18.',
      ],
    ];
  }

  $paragraphsData[] = [
    'type' => 'social_links',
    'parade_title' => 'Social links',
    'parade_social_link' => [
      [
        'uri' => 'https://twitter.com/brainsumCOM',
        'title' => '',
      ],
      [
        'uri' => 'https://www.linkedin.com/company-beta/2905177/',
        'title' => '',
      ],
      [
        'uri' => 'https://www.facebook.com/brainsum',
        'title' => '',
      ],
      [
        'uri' => 'https://plus.google.com/+Brainsum',
        'title' => '',
      ],
    ],
  ];

  $paragraphs = [];
  foreach ($paragraphsData as $data) {
    $paragraphs[] = $paragraphStorage->create($data);
  }

  $nodeData = [
    'type' => 'parade_onepage',
    'title' => 'Parade One Page Site Demo',
    'promote' => FALSE,
    'parade_onepage_id' => 'parade_one_page_site_demo',
    'parade_onepage_menu' => [
      [
        'uri' => 'internal:#home',
        'title' => 'Home',
        'options' => [
          'attributes' => [
            'data-selected' => 0,
          ],
        ],
      ],
      [
        'uri' => 'internal:#simpleonecolumn',
        'title' => 'Simple One Col',
        'options' => [
          'attributes' => [
            'data-selected' => 0,
          ],
        ],
      ],
      [
        'uri' => 'internal:#simpletwocolumn',
        'title' => 'Simple Two Col Title First',
        'options' => [
          'attributes' => [
            'data-selected' => 0,
          ],
        ],
      ],
      [
        'uri' => 'internal:#simple5',
        'title' => 'Simple Two Col Content First',
        'options' => [
          'attributes' => [
            'data-selected' => 1,
          ],
        ],
      ],
    ],
    'parade_onepage_sections' => $paragraphs,
  ];

  if ($locationRequirementsCheck) {
    $nodeData['parade_onepage_menu'][] = [
      'uri' => 'internal:#locations',
      'title' => 'Locations',
      'options' => [
        'attributes' => [
          'data-selected' => 0,
        ],
      ],
    ];
  }

  $demoContent = $entityTypeManager->getStorage('node')->create($nodeData);

  $demoContent->save();
  drupal_set_message(t('Demo content available at node/@nid', ['@nid' => $demoContent->id()]),
    'status');
}

/**
 * Helper function to add 'Site branding' block.
 */
function _parade_demo_add_system_branding_block() {
  $default_theme = \Drupal::config('system.theme')->get('default');
  $values = [
    'id' => 'system_branding_block',
    'plugin' => 'system_branding_block',
    'region' => 'content',
    'settings' => [
      'label' => 'Site branding - Parade demo',
      'label_display' => 0,
      'use_site_logo' => TRUE,
      'use_site_name' => FALSE,
      'use_site_slogan' => FALSE,
    ],
    'theme' => $default_theme,
    'visibility' => [
      'node_type' => [
        'id' => 'node_type',
        'bundles' => [
          'parade_onepage' => 'parade_onepage',
        ],
        'negate' => FALSE,
        'context_mapping' => [
          'node' => '@node.node_route_context:node',
        ],
      ],
    ],
    'weight' => -1,
  ];
  $blockStorage = \Drupal::entityTypeManager()->getStorage('block');
  $block = $blockStorage->create($values);
  $block->save();
}

/**
 * Set Content types visibility for 'Page title' block.
 *
 * Disable for Parade onepage nodes.
 */
function _parade_demo_set_visibility_page_title_block() {
  $default_theme = \Drupal::config('system.theme')->get('default');
  $blockStorage = \Drupal::entityTypeManager()->getStorage('block');
  /** @var \Drupal\block\BlockInterface $page_title_block */
  $page_title_block = $blockStorage->load($default_theme . '_page_title');

  if ($page_title_block->getRegion() === 'content') {
    $settings = [
      'id' => 'node_type',
      'bundles' => [
        'parade_onepage' => 'parade_onepage',
      ],
      'negate' => TRUE,
      'context_mapping' => [
        'node' => '@node.node_route_context:node',
      ],
    ];
    $page_title_block->setVisibilityConfig('node_type', $settings);
    $page_title_block->save();
  }
}

/**
 * Limit referenced paragraph types for campaign one page node.
 */
function parade_demo_update_8201() {
  $fieldConfig = 'field.field.node.parade_onepage.parade_onepage_sections';

  $configPath = drupal_get_path('module', 'parade_demo') . '/config/install';
  $source = new FileStorage($configPath);
  $installConfig = $source->read($fieldConfig);
  $handlerSettings = $installConfig['settings']['handler_settings'];

  $config_factory = \Drupal::configFactory();
  $editable = $config_factory->getEditable($fieldConfig);

  $editable->set('settings.handler_settings', $handlerSettings)
    ->save();
}

/**
 * Set css_enabled for enabled entities.
 */
function parade_demo_update_8202() {
  $config_factory = \Drupal::configFactory();
  $settings = $config_factory->getEditable('parade_demo.settings');
  $bundles = [];
  foreach ($settings->get('bundles') as $bundle => $data) {
    $bundles[$bundle]['css_enabled'] = 1;
  }
  $settings->set('bundles', $bundles);
  $settings->save(TRUE);
}

/**
 * Set css_disabled for entities.
 */
function parade_demo_update_8203() {
  $config_factory = \Drupal::configFactory();
  $settings = $config_factory->getEditable('parade_demo.settings');
  $bundles = $settings->get('bundles');
  foreach ($bundles as $bundle => $data) {
    if (isset($data['css_enabled'])) {
      $bundles[$bundle]['css_disabled'] = 0;
      if (!$data['css_enabled']) {
        $bundles[$bundle]['css_disabled'] = 1;
      }
      unset($bundles[$bundle]['css_enabled']);
    }
  }
  $settings->set('bundles', $bundles);
  $settings->save(TRUE);
}
